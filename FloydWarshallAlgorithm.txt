// Floyd Warshall Algorithm

#include<bits/stdc++.h>
using namespace std;

int main() {
    
    int m = 4, n = 4, V = 4;
    
    vector<vector<int>>  grid(m, vector<int>(n, 0));
    
    cout<<"Please fill your grid : "<<endl;
    
    for(int i = 0; i < m; i++) {
        cout<<"Enter "<<i + 1<<" row : ";
        for(int j = 0; j < n; j++) {
            cin>>grid[i][j];
        }
    }
    
    cout<<"Your grid is : "<<endl;
    
    for(int i = 0; i < m; i++) {
        for(int j = 0; j < n; j++) {
            cout<<grid[i][j]<<" ";
        }
        cout<<endl;
    }
    
    for(int via = 0; via < V; via++) {
        for(int i = 0; i < m; i++) {
            for(int j = 0; j < n; j++) {
                grid[i][j] = min(grid[i][j], grid[i][via] + grid[via][j]);
            }
        }
    }
    
    cout<<"After getting the shortest paths : "<<endl;
    for(int i = 0; i < m; i++) {
        for(int j = 0; j < n; j++) {
            cout<<grid[i][j]<<" ";
        }
        cout<<endl;
    }
    
    return 0;
}